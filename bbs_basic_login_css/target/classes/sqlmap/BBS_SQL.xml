<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.bbs.dao.BDao">
	<!-- 글목록 -->
	<select id="list" resultType="com.spring.bbs.dto.BDto">
		SELECT * FROM (SELECT ROWNUM rnum, num, name, title, content, write_date, to_char(write_date, 'hh24:mi:ss') as write_time, hit, ref, step, lev, reply_cnt 
		FROM ( SELECT * FROM spring_bbs ORDER BY ref desc, step asc ) spring_bbs) 
		WHERE rnum &gt;= #{param1} and rnum &lt;= #{param2}
	</select>
	
	<!-- 페이징처리 -->
	<select id="pageCnt" resultType="int">
		SELECT COUNT(*) AS num FROM spring_bbs
	</select>
	
	<!-- 글쓰기 -->
	<insert id="write" parameterType="map">
		insert into spring_bbs values (spring_bbs_seq.nextval, #{name}, #{title}, #{content}, sysdate, 0, spring_bbs_seq.currval, 0, 0, 0)
	</insert>
	
	<!-- 글읽기 -->
	<select id="read" resultType="com.spring.bbs.dto.BDto">
		SELECT num, name, title, content, write_date, to_char(write_date, 'hh24:mi:ss') as write_time, hit, ref, step, lev, reply_cnt FROM spring_bbs WHERE num = #{num}
	</select>
	
	<!-- 조회수 올리기 -->
	<update id="updateCntUp">
		UPDATE spring_bbs SET hit = hit + 1 WHERE num = #{num}
	</update>
	
	<!-- 삭제할 글에 답글이 있는지 확인(답글이 있을 경우 삭제 불가능 처리) -->
	<select id="replyCheck" parameterType="map" resultType="int">
		SELECT reply_cnt FROM spring_bbs WHERE num = #{num}
	</select>
	
	<!-- 글삭제 -->
	<delete id="delete">
		DELETE spring_bbs WHERE num = #{num}
	</delete> 
	
	<!-- 글삭제시 해당 글이 답글이면 원문글 답글수 줄이기 -->
	<update id="deleteReplyCntUpdate" parameterType="map">
		<selectKey resultType="int" keyProperty="step" order="BEFORE">
			SELECT NVL(MAX(step), 0) FROM spring_bbs WHERE ref = #{ref} AND step &lt; #{step} AND lev = #{lev}
		</selectKey>
		UPDATE spring_bbs SET reply_cnt = reply_cnt - 1 WHERE ref = #{ref} AND step = #{step} AND lev = #{lev}
	</update>
	
	<!-- 수정 -->
	<delete id="update" parameterType="map">
		UPDATE spring_bbs SET title = #{title}, content = #{content} WHERE num = #{num}
	</delete> 
	
	<!-- 검색 -->
	<select id="search" resultType="com.spring.bbs.dto.BDto" parameterType="map">
		SELECT * FROM (SELECT ROWNUM rnum, num, name, title, content, write_date, to_char(write_date, 'hh24:mi:ss') as write_time, hit, ref, step, lev, reply_cnt 
		FROM ( SELECT * FROM spring_bbs WHERE <include refid="search"></include> ORDER BY ref desc, step asc) spring_bbs) 
		WHERE rnum &gt;= #{start} and rnum &lt;= #{end} 
	</select>
	<sql id="search">
		<choose>
			<when test="searchOption == 'title'">
				title LIKE '%'||#{searchWord}||'%'
			</when>
			<when test="searchOption == 'content'">
				content LIKE '%'||#{searchWord}||'%'
			</when>
			<when test="searchOption == 'both'">
				title LIKE '%'||#{searchWord}||'%' OR content LIKE '%'||#{searchWord}||'%'
			</when>
			<otherwise>
				name LIKE '%'||#{searchWord}||'%'
			</otherwise>
		</choose>
	</sql>
	<!-- 답글이 위치할 곳에 글이 존재하는지 여부 확인 -->
	<select id="replySearchStep" resultType="int" parameterType="map">
		SELECT NVL(MIN(step), 0) AS reply_step FROM spring_bbs WHERE ref = #{ref} AND step &gt; #{step} AND lev &lt;= #{lev}
	</select>
	
	<!-- 답글이 위치할 곳에 글이 존재할 경우, 해당 위치부터 STEP 값 증가(밑으로 내리기) -->
	<update id="replyStepUp" parameterType="map">
		UPDATE spring_bbs SET step = step + 1 WHERE ref = #{ref} AND step &gt;= #{replyStep}
	</update>
	
	<!-- 답글이 위치할 곳에 글이 존재하지 않을경우, 답글 위치 가져오기(가장 아래의 step 값 + 1) -->
	<select id="replyMaxStep" resultType="int">
		SELECT MAX(step) + 1 FROM spring_bbs WHERE ref = #{ref}
	</select>
	
	<!-- 답글  -->
	<insert id="reply" parameterType="map">
		insert into spring_bbs values (spring_bbs_seq.nextval, #{name}, #{title}, #{content}, sysdate, 0, #{ref}, #{replyStep}, #{lev} + 1, 0)
	</insert>
	
	<!-- 답글 작성 후 원문글 답글수 올리기 -->
	<update id="replyCntUpdate" parameterType="map">
		<selectKey resultType="int" keyProperty="upStep" order="BEFORE">
			SELECT NVL(MAX(step), 0) FROM spring_bbs WHERE ref = #{ref} AND step &lt; #{step} AND  lev = #{lev}
		</selectKey>
		UPDATE spring_bbs SET reply_cnt = reply_cnt + 1 WHERE ref = #{ref} AND step = #{upStep} AND lev = #{lev}
	</update>
</mapper>
